{"version":3,"sources":["blocklyArea.js","textArea.js","plotArea.js","errorArea.js","dataArea.js","navbar_mui.js","App.js","serviceWorker.js","index.js"],"names":["BlocklyArea","props","this","xml","React","Component","TextArea","code","PlotArea","plot","ErrorArea","error","TableHeader","TableBody","rows","dataFrame","map","row","index","key","name","job","Table","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","run","justifyContent","title","display","breakpoints","up","inputRoot","sectionDesktop","sectionMobile","button","margin","input","PrimarySearchAppBar","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","style","background","Toolbar","Tooltip","disableFocusListener","IconButton","size","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","console","log","ListItemText","data","accept","type","htmlFor","aria-label","component","href","Typography","variant","noWrap","BlocklyEnvironment","state","table","runCode","bind","setState","primaryMinSize","secondaryMinSize","Fab","fab","right","top","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de7944b8.chunk.js","sourcesContent":["import React from \"react\";\n\nclass BlocklyArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.props.xml}</div>\n      </div>\n    );\n  }\n}\n\nexport default BlocklyArea;","import React from \"react\";\n\nclass TextArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div><pre>{this.props.code}</pre></div>\n      </div>\n    );\n  }\n}\n\nexport default TextArea;\n","import React from \"react\";\n\nclass PlotArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.props.plot}</div>\n      </div>\n    );\n  }\n}\n\nexport default PlotArea;","import React from \"react\";\n\nclass ErrorArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div><pre>{this.props.error}</pre></div>\n      </div>\n    );\n  }\n}\n\nexport default ErrorArea;","import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = props => {\n  const rows = props.dataFrame.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n      </tr>\n    )\n  })\n\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render() {\n    const { dataFrame } = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody dataFrame={dataFrame} />\n      </table>\n    )\n  }\n}\n\nexport default Table","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { CSVLink } from \"react-csv\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\"\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\"\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem);\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  run: {\n    justifyContent: 'center'\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    },\n    paddingRight: 10\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" style={{ background: \"#1c313a\" }}>\n        <Toolbar>\n        \n        {/* Create Save button with options to save XML, CSV, or Plot (PDF) */}\n        \n        <div>\n      <Tooltip disableFocusListener title=\"Save\">\n        <IconButton size=\"medium\" onClick={handleClick} color=\"inherit\">\n          <SaveIcon />\n        </IconButton>\n      </Tooltip>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <div\n            onClick={() => {\n              console.log(\"save xml\");\n            }}\n          >\n          <ListItemText primary=\"Worskpace\" />\n          </div>\n        </StyledMenuItem>\n\n        <StyledMenuItem>\n          {/* In stateful components I could put this.props.table here, \n          but how does this translate to a functional component? */}\n            <CSVLink data={\"this is a test\"}>\n            <ListItemText primary=\"Data\" />\n          </CSVLink>\n        </StyledMenuItem>\n\n        {/* will need to use html2canvas for plot */}\n        <StyledMenuItem>\n        <div\n            onClick={() => {\n              console.log(\"save plot\");\n            }}\n        >\n          <ListItemText primary=\"Plot\" />\n          </div>\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n\n    {/* Upload workspace, will need to update the XML/workspace area */}\n          <input\n            accept=\"text/*\"\n            className={classes.input}\n            id=\"icon-button-file\"\n            type=\"file\"\n          />\n          <label htmlFor=\"icon-button-file\">\n            <Tooltip disableFocusListener title=\"Upload Workspace\">\n              <IconButton\n                color=\"inherit\"\n                className={classes.button}\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <UploadIcon />\n              </IconButton>\n            </Tooltip>\n          </label>\n\n          {/* re-route to jekyll Guide */}\n          <Tooltip disableFocusListener title=\"Guide\">\n            <IconButton color=\"inherit\" href=\"./guide/\" >\n              <HelpIcon/>\n            </IconButton>\n          </Tooltip>\n          <div className={classes.grow} />\n         <Typography className={classes.title} variant=\"h6\" noWrap>\n            TidyBlocks\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport SplitterLayout from \"react-splitter-layout\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport Fab from \"@material-ui/core/Fab\";\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nimport BlocklyArea from './blocklyArea.js'\nimport TextArea from './textArea'\nimport PlotArea from './plotArea'\nimport ErrorArea from './errorArea.js'\nimport DataArea from './dataArea'\nimport NavBar from \"./navbar_mui\"\n\nimport \"./splitter-style-sheet.css\";\nimport \"react-tabs/style/react-tabs.css\";\n\nconst styles = theme => ({\n  fab: {\n    backgroundColor: \"#a7c0cd\",\n     '&:hover': {\n      backgroundColor: \"#202F37\",\n     },\n    color: \"white\",\n    position: \"absolute\",\n    right: 10,\n    top: 10\n  }\n});\n\nclass BlocklyEnvironment extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"This is where code will go\",\n      error: \"This is where errors will go\",\n      plot: \"This will display plots\",\n      xml: \"This is where blocks go\",\n      table: [\n        {\n          name: 'Charlie',\n          job: 'Janitor',\n        },\n        {\n          name: 'Mac',\n          job: 'Bouncer',\n        },\n        {\n          name: 'Dee',\n          job: 'Aspring actress',\n        },\n        {\n          name: 'Dennis',\n          job: 'Bartender',\n        }\n      ]\n    }\n\n    this.runCode = this.runCode.bind(this)\n  }\n\n  runCode() {\n    let code = \"new code\"\n    let plot = \"new plot\"\n    let error = \"new error\"\n    let xml = \"new xml\"\n    let table = [\n      {\n        name: 'Rick',\n        job: 'Scientist',\n      },\n      {\n        name: 'Morty',\n        job: 'Idiot'\n      }\n    ]\n    this.setState({\n      code: code,\n      table: table,\n      plot: plot,\n      error: error,\n      xml: xml\n    })\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return(\n      <div>\n\n      <NavBar table={this.state.table}/>\n\n      <SplitterLayout  primaryMinSize={200} secondaryMinSize={0}>\n      <div className=\"leftPane\">\n      <h1>Blockly</h1>\n      <BlocklyArea xml={this.state.xml} />\n      <Fab className={classes.fab} onClick={this.runCode}>\n        Run\n      </Fab>\n      </div>\n\n      <div className =\"rightPane\">\n\n      <Tabs>\n      <TabList>\n      <Tab>Data</Tab>\n      <Tab>Plot</Tab>\n      <Tab>Text</Tab>\n      <Tab>Debug</Tab>\n      </TabList>\n\n      <TabPanel>\n      <DataArea dataFrame={this.state.table} />\n      </TabPanel>\n\n      <TabPanel>\n      <PlotArea plot={this.state.plot}/>\n      </TabPanel>\n\n      <TabPanel>\n      <TextArea code={this.state.code}/>\n      </TabPanel>\n\n      <TabPanel>\n      <ErrorArea error={this.state.error}/>\n      </TabPanel>\n      </Tabs>\n      </div>\n      </SplitterLayout>\n      </div>\n    )\n  }\n}\n\nBlocklyEnvironment.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BlocklyEnvironment);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}